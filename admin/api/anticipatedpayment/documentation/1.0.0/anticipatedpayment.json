{
  "paths": {
    "/anticipatedpayment": {
      "get": {
        "deprecated": false,
        "description": "Find all the anticipatedpayment's records",
        "responses": {
          "200": {
            "description": "Retrieve anticipatedpayment document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Anticipatedpayment"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Anticipatedpayment"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new anticipatedpayment record",
        "responses": {
          "200": {
            "description": "Retrieve anticipatedpayment document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Anticipatedpayment"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Anticipatedpayment"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAnticipatedpayment"
              }
            }
          }
        }
      }
    },
    "/anticipatedpayment/count": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the numver of anticipatedpayment documents",
        "responses": {
          "200": {
            "description": "Retrieve anticipatedpayment document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Anticipatedpayment"
        ],
        "parameters": []
      }
    },
    "/anticipatedpayment/{_id}": {
      "get": {
        "deprecated": false,
        "description": "Find one anticipatedpayment record",
        "responses": {
          "200": {
            "description": "Retrieve anticipatedpayment document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Anticipatedpayment"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Anticipatedpayment"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a single anticipatedpayment record",
        "responses": {
          "200": {
            "description": "Retrieve anticipatedpayment document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Anticipatedpayment"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Anticipatedpayment"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAnticipatedpayment"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a single anticipatedpayment record",
        "responses": {
          "200": {
            "description": "deletes a single anticipatedpayment based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Anticipatedpayment"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Anticipatedpayment": {
        "required": [
          "id",
          "recipientName",
          "recipientEmail",
          "date",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "index": {
            "type": "integer"
          },
          "recipientName": {
            "type": "string"
          },
          "recipientEmail": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          },
          "comments": {
            "type": "string"
          },
          "user": {
            "required": [
              "id",
              "username",
              "email"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "resetPasswordToken": {
                "type": "string"
              },
              "confirmed": {
                "type": "boolean"
              },
              "blocked": {
                "type": "boolean"
              },
              "role": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "projectCode": {
                "type": "integer"
              }
            }
          },
          "status": {
            "type": "string",
            "default": "Unpayed",
            "enum": [
              "Unpayed",
              "Payed"
            ]
          },
          "sumPayed": {
            "type": "number"
          },
          "receiptNumber": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": [
              "Cheque",
              "Bank Transfer",
              "Defrayal",
              "Cash",
              "Eventer",
              "Other"
            ]
          },
          "contact": {
            "type": "string",
            "default": ""
          },
          "accountNumber": {
            "type": "string",
            "default": "0 לא צוין",
            "enum": [
              "51 הכנסות מפעילות/תוכן",
              "52 הכנסות משירותים",
              "53 הכנסות ממכירות",
              "54 הכנסות מתרומות",
              "55 הכנסות מתמיכות",
              "56 הכנסות מקרנות",
              "השקעה עצמית 58",
              "הכנסות אחר 59",
              "60 הכנסות פנימיות",
              "0 לא צוין"
            ]
          },
          "paymentDate": {
            "type": "string",
            "default": ""
          }
        }
      },
      "NewAnticipatedpayment": {
        "required": [
          "recipientName",
          "recipientEmail",
          "date",
          "amount"
        ],
        "properties": {
          "index": {
            "type": "integer"
          },
          "recipientName": {
            "type": "string"
          },
          "recipientEmail": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          },
          "comments": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "default": "Unpayed",
            "enum": [
              "Unpayed",
              "Payed"
            ]
          },
          "sumPayed": {
            "type": "number"
          },
          "receiptNumber": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": [
              "Cheque",
              "Bank Transfer",
              "Defrayal",
              "Cash",
              "Eventer",
              "Other"
            ]
          },
          "contact": {
            "type": "string",
            "default": ""
          },
          "accountNumber": {
            "type": "string",
            "default": "0 לא צוין",
            "enum": [
              "51 הכנסות מפעילות/תוכן",
              "52 הכנסות משירותים",
              "53 הכנסות ממכירות",
              "54 הכנסות מתרומות",
              "55 הכנסות מתמיכות",
              "56 הכנסות מקרנות",
              "השקעה עצמית 58",
              "הכנסות אחר 59",
              "60 הכנסות פנימיות",
              "0 לא צוין"
            ]
          },
          "paymentDate": {
            "type": "string",
            "default": ""
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Anticipatedpayment"
    }
  ]
}